V/**\u000a * Created by Salandora on 27.07.2015.\u000a */\u000a$(function() {\u000a    function EepromMarlinViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.control = parameters[0];\u000a        self.connection = parameters[1];\u000a\u000a        self.firmwareRegEx = /FIRMWARE_NAME:[^\u005cs]+/i;\u000a        self.marlinRegEx = /Marlin[^\u005cs]*/i;\u000a\u000a        self.eepromM92RegEx = /M92 ([X])(.*)[^0-9]([Y])(.*)[^0-9]([Z])(.*)[^0-9]([E])(.*)/;\u000a        self.eepromM203RegEx = /M203 ([X])(.*)[^0-9]([Y])(.*)[^0-9]([Z])(.*)[^0-9]([E])(.*)/;\u000a        self.eepromM201RegEx = /M201 ([X])(.*)[^0-9]([Y])(.*)[^0-9]([Z])(.*)[^0-9]([E])(.*)/;\u000a        self.eepromM204RegEx = /M204 ([S])(.*)[^0-9]([T])(.*)/;\u000a        self.eepromM205RegEx = /M205 ([S])(.*)[^0-9]([T])(.*)[^0-9]([B])(.*)[^0-9]([X])(.*)[^0-9]([Z])(.*)[^0-9]([E])(.*)/;\u000a        self.eepromM206RegEx = /M206 ([X])(.*)[^0-9]([Y])(.*)[^0-9]([Z])(.*)/;\u000a        self.eepromM301RegEx = /M301 ([P])(.*)[^0-9]([I])(.*)[^0-9]([D])(.*)/;\u000a        self.eepromM851RegEx = /M851 ([Z])(.*)/;\u000a\u000a        self.isMarlinFirmware = ko.observable(false);\u000a\u000a        self.isConnected = ko.computed(function() {\u000a            return self.connection.isOperational() || self.connection.isPrinting() ||\u000a                   self.connection.isReady() || self.connection.isPaused();\u000a        });\u000a\u000a        self.eepromData = ko.observableArray([]);\u000a\u000a        self.onStartup = function() {\u000a            $('#settings_plugin_eeprom_marlin_link a').on('show', function(e) {\u000a                if (self.isConnected() && !self.isMarlinFirmware())\u000a                    self._requestFirmwareInfo();\u000a            });\u000a        }\u000a\u000a        self.fromHistoryData = function(data) {\u000a            _.each(data.logs, function(line) {\u000a                var match = self.firmwareRegEx.exec(line);\u000a                if (match != null) {\u000a                    if (self.marlinRegEx.exec(match[0]))\u000a                        self.isMarlinFirmware(true);\u000a                }\u000a            });\u000a        };\u000a\u000a        self.fromCurrentData = function(data) {\u000a            if (!self.isMarlinFirmware()) {\u000a                _.each(data.logs, function (line) {\u000a                    var match = self.firmwareRegEx.exec(line);\u000a                    if (match) {\u000a                        if (self.marlinRegEx.exec(match[0]))\u000a                            self.isMarlinFirmware(true);\u000a                    }\u000a                });\u000a            }\u000a            else\u000a            {\u000a                _.each(data.logs, function (line) {\u000a                    // M92 steps per unit\u000a                    var match = self.eepromM92RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M92 X',\u000a                            position: 1,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'X steps per unit'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M92 Y',\u000a                            position: 2,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Y steps per unit'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M92 Z',\u000a                            position: 3,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'Z steps per unit'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M92 E',\u000a                            position: 4,\u000a                            origValue: match[8],\u000a                            value: match[8],\u000a                            description: 'E steps per unit'\u000a                        });\u000a                    }\u000a\u000a                    // M203 feedrates\u000a                    match = self.eepromM203RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M203 X',\u000a                            position: 5,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'X maximum feedrates (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M203 Y',\u000a                            position: 6,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Y maximum feedrates (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M203 Z',\u000a                            position: 7,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'Z maximum feedrates (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M203 E',\u000a                            position: 8,\u000a                            origValue: match[8],\u000a                            value: match[8],\u000a                            description: 'E maximum feedrates (mm/s)'\u000a                        });\u000a                    }\u000a\u000a                    // M201 Maximum Acceleration (mm/s2)\u000a                    match = self.eepromM201RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M201 X',\u000a                            position: 9,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'X maximum Acceleration (mm/s2)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M201 Y',\u000a                            position: 10,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Y maximum Acceleration (mm/s2)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M201 Z',\u000a                            position: 11,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'Z maximum Acceleration (mm/s2)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M201 E',\u000a                            position: 12,\u000a                            origValue: match[8],\u000a                            value: match[8],\u000a                            description: 'E maximum Acceleration (mm/s2)'\u000a                        });\u000a                    }\u000a\u000a                    // M204 Acceleration\u000a                    match = self.eepromM204RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M204 S',\u000a                            position: 13,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'Acceleration'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M204 T',\u000a                            position: 14,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Retract acceleration'\u000a                        });\u000a                    }\u000a\u000a                    // M205 Advanced variables\u000a                    match = self.eepromM205RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 S',\u000a                            position: 15,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'Min feedrate (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 T',\u000a                            position: 16,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Min travel feedrate (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 B',\u000a                            position: 17,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'Minimum segment time (ms)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 X',\u000a                            position: 18,\u000a                            origValue: match[8],\u000a                            value: match[8],\u000a                            description: 'Maximum XY jerk (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 Z',\u000a                            position: 19,\u000a                            origValue: match[10],\u000a                            value: match[10],\u000a                            description: 'Maximum Z jerk (mm/s)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M205 E',\u000a                            position: 20,\u000a                            origValue: match[12],\u000a                            value: match[12],\u000a                            description: 'Maximum E jerk (mm/s)'\u000a                        });\u000a                    }\u000a\u000a                    // M206 Home offset\u000a                    match = self.eepromM206RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M206 X',\u000a                            position: 21,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'X Home offset (mm)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M206 Y',\u000a                            position: 22,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'Y Home offset (mm)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M206 Z',\u000a                            position: 23,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'Z Home offset (mm)'\u000a                        });\u000a                    }\u000a\u000a                    // M301 PID settings\u000a                    match = self.eepromM301RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M301 P',\u000a                            position: 24,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'PID - Proportional (Kp)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M301 I',\u000a                            position: 25,\u000a                            origValue: match[4],\u000a                            value: match[4],\u000a                            description: 'PID - Integral (Ki)'\u000a                        });\u000a                        self.eepromData.push({\u000a                            dataType: 'M301 D',\u000a                            position: 26,\u000a                            origValue: match[6],\u000a                            value: match[6],\u000a                            description: 'PID - Derivative (Kd)'\u000a                        });\u000a                    }\u000a\u000a                    // M851 Z-Probe Offset\u000a                    match = self.eepromM851RegEx.exec(line);\u000a                    if (match) {\u000a                        self.eepromData.push({\u000a                            dataType: 'M851 Z',\u000a                            position: 27,\u000a                            origValue: match[2],\u000a                            value: match[2],\u000a                            description: 'Z-Probe Offset (mm)'\u000a                        });\u000a                    }\u000a                });\u000a            }\u000a        };\u000a\u000a        self.onEventConnected = function() {\u000a            self._requestFirmwareInfo();\u000a        }\u000a\u000a        self.onEventDisconnected = function() {\u000a            self.isMarlinFirmware(false);\u000a        };\u000a\u000a        self.loadEeprom = function() {\u000a            self.eepromData([]);\u000a            self._requestEepromData();\u000a        };\u000a\u000a        self.saveEeprom = function()  {\u000a            var eepromData = self.eepromData();\u000a            _.each(eepromData, function(data) {\u000a                if (data.origValue != data.value) {\u000a                    self._requestSaveDataToEeprom(data.dataType, data.position, data.value);\u000a                    data.origValue = data.value;\u000a                }\u000a            });\u000a\u000a            var cmd = 'M500';\u000a            self.control.sendCustomCommand({ command: cmd });\u000a            alert('EEPROM data stored.');\u000a        };\u000a\u000a        self._requestFirmwareInfo = function() {\u000a            self.control.sendCustomCommand({ command: "M115" });\u000a        };\u000a\u000a        self._requestEepromData = function() {\u000a            self.control.sendCustomCommand({ command: "M503" });\u000a        }\u000a        self._requestSaveDataToEeprom = function(data_type, position, value) {\u000a            var cmd = data_type + value;\u000a            self.control.sendCustomCommand({ command: cmd });\u000a        }\u000a    }\u000a\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        EepromMarlinViewModel,\u000a        ["controlViewModel", "connectionViewModel"],\u000a        "#settings_plugin_eeprom_marlin"\u000a    ]);\u000a});\u000a\u000a;\u000a
p0
.