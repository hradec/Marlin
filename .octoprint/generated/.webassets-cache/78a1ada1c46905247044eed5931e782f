V$(function () {\u000a    function systemCommandEditorDialogViewModel(parameters) {\u000a        var self = this;\u000a\u000a        self.element = ko.observable();\u000a\u000a        self.title = ko.observable(gettext("Create Command"));\u000a\u000a        self.useConfirm = ko.observable(false);\u000a\u000a        self.reset = function (data) {\u000a            var element = {\u000a                name: "",\u000a                action: "",\u000a                command: "",\u000a                confirm: ""\u000a            };\u000a\u000a            if (typeof data == "object") {\u000a                element = _.extend(element, data);\u000a\u000a                self.useConfirm(data.hasOwnProperty("confirm"));\u000a            }\u000a\u000a            self.element(ko.mapping.fromJS(element));\u000a        }\u000a        self.show = function (f) {\u000a            var dialog = $("#systemCommandEditorDialog");\u000a            var primarybtn = $('div.modal-footer .btn-primary', dialog);\u000a\u000a            primarybtn.unbind('click').bind('click', function (e) {\u000a                var obj = ko.mapping.toJS(self.element);\u000a\u000a                if (!self.useConfirm())\u000a                    delete obj.confirm;\u000a\u000a                f(obj);\u000a            });\u000a\u000a            dialog.modal({\u000a                show: 'true',\u000a                backdrop: 'static',\u000a                keyboard: false\u000a            });\u000a        }\u000a    }\u000a\u000a    // view model class, parameters for constructor, container to bind to\u000a    OCTOPRINT_VIEWMODELS.push([\u000a        systemCommandEditorDialogViewModel,\u000a        [],\u000a        "#systemCommandEditorDialog"\u000a    ]);\u000a});\u000a;\u000a
p0
.